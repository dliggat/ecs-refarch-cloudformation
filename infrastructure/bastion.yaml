AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the bastion should be deployed to

  Subnets:
    Description: Choose which subnets the bastion should be deployed to
    Type: List<AWS::EC2::Subnet::Id>

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName

  AmiId:
    Type: AWS::EC2::Image::Id

  InstanceType:
    Type: String
    Description: The size of the instance


Resources:
  IamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: 'PermitAssumeRoleEc2'
            Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
      Path: /
      # Policies:
      #   - PolicyName: GetObjects
      #     PolicyDocument:
      #       Version: "2012-10-17"
      #       Statement:
      #         - Effect: Allow
      #           Action:
      #             - "s3:GetObject"
      #           Resource: "arn:aws:s3:::*/*"

  IamProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - Ref: IamRole

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription:
        "Fn::Join":
          - "-"
          - - { Ref: EnvironmentName }
            - "sg"
      Tags:
        - Key: Name
          Value:
            "Fn::Join":
              - "-"
              - - { Ref: EnvironmentName }
                - "sg"

  SecurityGroupSshIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: { Ref: SecurityGroup }
      CidrIp: "0.0.0.0/0"
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: { Ref: AmiId }
      KeyName: { Ref: KeyName }
      IamInstanceProfile: { Ref: IamProfile }
      InstanceType: { Ref: InstanceType }
      SecurityGroups:
        - { Ref: SecurityGroup }
      UserData:
        "Fn::Base64":
          "Fn::Join":
            - "\n"
            - - "#!/bin/bash"
              - ""
              - "yum update -y"
              - "yum install -y git sl gcc mysql postgresql95-devel telnet"

  Asg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      Tags:
        - Key: Name
          Value:
            "Fn::Join":
              - "-"
              - - { Ref: EnvironmentName }
                - "asg"
                - "instance"
          PropagateAtLaunch: true

      MinSize: 1
      MaxSize: 1
      LaunchConfigurationName: { Ref: LaunchConfig }
      VPCZoneIdentifier: !Ref Subnets

Outputs:
  SgId:
    Value: { Ref: SecurityGroup }
